
# 01. 운영체제의 개념

* 운영체제 (OS, Operating System)
- '컴퓨터 시스템의 자원들을 효율적으로 관리' 하며, 사용자가 컴퓨터를 '편리하고 효과적으로 사용할 수 있도록 환경을 제공하는 여러 프로그램의 모임'
- 컴퓨터 사용자와 컴퓨터 하드웨어 간의 '인터페이스' 로 동작하는 '시스템 소프트웨어' 의 일종
- 다른 응용 프로그램이 유용한 작업을 할 수 있도록 환경을 제공해줌
- 운영체제는 '프로세스' , '기억장치', '주변 장치', '파일' 등을 관리한는 기능을 수행
- 종류 : Windows, UNIX, Linux, MacOS, MS-DOS 등

* 운영체제의 목적
- 운영체제의 목적에는 '처리 능력 향상', '사용 가능도 향상', '신뢰도 향상', '변환 시간 단축' 등이 있음
1) 처리 능력 (Throughput) : 일정 시간 내에 시스템이 처리하는 일의 양
2) 반환 시간 (Turn Around Time) : 시스템에 작업을 의뢰한 시간부터 처리가 완료될 때까지 걸린 시간
3) 사용 가능도 (Availability) : 시스템을 사용할 필요가 있을 때 즉시 사용 가능한 정도
4) 신뢰도 (Reliability) : 시스템이 주어진 문제를 정확하게 해결하는 정도

* 운영체제의 기능
- '프로세서(처리기, Processor)', '기억장치(주기억장치, 보조기억장치)', '입,출력 장치', '파일 및 정보' 등의 자원을 관리함
- 자원을 효율적으로 관리하기 위해 자원의 '스케쥴링' 기능을 제공함
- 사용자와 시스템 간의 편리한 '인터페이스' 를 제공
- 시스템의 각종 하드웨어와 네트워크를 관리, 제어 함
- 데이터를 관리하고, 데이터 및 자원의 공유 기능을 제공


# 02. 운영체제의 종류

* Windows
- '1990년대 마이크로소프트(Microsoft) 사가 개발한 운영체제'

** 특징
1) 그래픽 사용자 인터페이스 (GUI, Graphic User Interface)
- 키보드로 명령어를 직접 입력하지 않고, 마우스로 아이콘이나 메뉴를 선택하여 모든 작업을 수행하는 방식

2) 선점형 멀티태스킹 (Preemptive Multi-Tasking)
- 동시에 여러 개의 프로그램을 실행하는 '멀티태스킹' 을 하면서 운영체제가 각 작업의 CPU 이용 시간을 제어하여 응용 프로그램 실행 중 문제가 발생하면 해당 프로그램을 강제 종료시키고 모든 시스템 자원을 반환하는 방식

3) PnP (Plug and Play, 자동 감지 기능)
- 컴퓨터 시스템에 프린터나 사운드 카드 등의 하드웨어를 설치했을 때, 해당 하드웨어를 사용하는데 필요한 시스템 환경을 운영체제가 자동으로 구성해주는 기능

4) OLE (Object Linking and Embedding)
- 다른 여러 응용 프로그램에서 작성된 문자나 그림 등의 '개체(Object)' 를 현재 작업 중인 문서에 자유롭게 '연결(Linking)' 하거나 '삽입(Embedding)' 하여 편집할 수 있게 하는 기능

5) 255자의 긴 파일명 : 특수문자 를 제외한 모든 문자 및 공백을 사용하여 최대 255자까지 파일 이름을 지정할 수 있음
6) Single-User 시스템 : 컴퓨터 한 대를 한 사람만이 독점해서 사용함

* UNIX
- 1960년대 'AT&T 벨(Bell) 연구소, MIT, General Electronic이 공동 개발한 운영체제'
- '시분할 시스템 (Time sharing System)' 을 위해 설계된 '대화식 운영체제'
- 소스가 공개된 '개방형 시스템(Open System)'
- 대부분 'C언어' 로 작성되어 있어 '이식성' 이 높으며 장치, 프로세스 간 '호환성' 이 높음
- '다중 사용자(Multi-User)', '다중 작업(Multi-Tasking)' 을 지원
- '트리(Tree) 구조' 의 파일 시스템을 가짐

** UNIX 시스템의 구성
1) 커널 (Kernel)
- 하드웨어를 보호하고, '프로그램과 하드웨어' 간 인터페이스 역할을 담당
- UNIX의 가장 핵심적인 부분
- 프로세스(CPU 스케줄링) 관리, 기억장치 관리, 파일 관리, 입출력 관리, 프로세스간 통신, 데이터 전송 및 변환 등 여러 가지 기능을 수행함

2) 쉘 (Shell)
- 사용자의 명령어를 인식하여 프로그램을 호출하고, 명령을 수행하는 명령어 해석기
- '시스템과 사용자' 간의 '인터페이스' 를 담당
- 종류 : Bourne Shell, C Shell, Korn Shell

3) 유틸리티 프로그램 (Utility Program)
- 일반 사용자가 작성한 응용 프로그램을 처리하는 데 사용
- DOS 에서의 외부 명령어에 해당됨
- 종류 : 에디터, 컴파일러, 인터프리터, 디버거 등ㄴ

* Linux
- 1991년 '리누스 토발즈(Linus Torvalds)' 가 'UNIX' 를 기반으로 개발한 운영체제
- 프로그램 소스 코드가 무료로 공개되어 있기 때문에 프로그래머가 원하는 기능을 추가할 수 있음
- 다양한 플랫폼에 설치하여 사용이 가능하며, 재배포가 가능
- 'UNIX'와 완벽하게 호환됨
- 대부분 특징이 'UNIX' 와 동일

* MacOS
- 1980년대 '애플(Apple)' 사가 'UNIX' 를 기반으로 개발한 운영체제
- 아이맥과 맥북 등 애플 사에서 생산하는 제품에서만 사용 가능
- 드라이버 설치 및 install 과 uninstall 의 과정이 단순함

* Android
- '구글(Google)' 사에서 개발한 '리눅스 커널 기반'의 개발형 모바일 운영체제
- 모든 코드가 공개된 개방형 소프트웨어
- '자바' 와 '코틀린' 으로 애플리케이션을 작성
- 스마트폰 등의 휴대용 장치에서 주로 사용됨

* IOS
- '애플(Apple)' 사에서 개발한 '유닉스' 기반의 모바일 운영체제
- 아이폰, 아이팟 터치, 아이패드 등에 내장됨
- 애플사 고유의 모바일 운영체제로, 타사 제품은 IOS를 탑재할 수 없음


















































































































